// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES2_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES2_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES2_URL_NON_POOLING") // used for migrations
}

generator client {
  provider = "prisma-client-js"
}

// Define the model for FPMComplex
model FPMComplex {
  hMy               Int             @id @default(autoincrement())
  hCompany          Int
  sGuid             String          @unique
  sName             String?
  hAddedBy          Int
  hLastModifiedBy   Int
  dtLastModifiedUtc DateTime
  // Define the relationship with FPMBuilding
  buildings         FPMBuilding[]
  FPMDrawingSet     FPMDrawingSet[]
}

// Define the model for FPMBuilding
model FPMBuilding {
  hMy                  Int        @id @default(autoincrement())
  sGuid                String     @unique
  hFPMComplex          Int
  blsComplexDescriptor Boolean
  hAddedBy             Int
  hAddedUtc            DateTime
  hLastModifiedBy      Int
  dtLastModifiedUtc    DateTime
  // Define the relationship with FPMComplex
  complex              FPMComplex @relation(fields: [hFPMComplex], references: [hMy])
  // Define the relationship with FPMFloor
  floors               FPMFloor[]
}

// Define the model for FPMDrawing
model FPMDrawing {
  hMy                   Int               @id @default(autoincrement())
  sGuid                 String            @unique
  hFPMDrawingSet        Int
  hFPMDrawingSourceFile Int
  iDrawingType          Int
  dtEffectiveUtc        DateTime?
  sComments             String?
  sName                 String?
  // Define the relationship with FPMDrawingSet
  drawingSet            FPMDrawingSet     @relation(fields: [hFPMDrawingSet], references: [hMy])
  // Define the relationship with FPMDrawingSpace
  spaces                FPMDrawingSpace[]
  // Define the relationship with FPMFloorDrawingXref
  floors                FPMFloor[]        @relation(name: "FPMFloorDrawingXref")
}

// Define the model for FPMDrawingSet
model FPMDrawingSet {
  hMy                  Int          @id @default(autoincrement())
  sGuid                String       @unique
  hFPMComplex          Int
  iAreaMeasureStandard Int
  iPriority            Int
  sName                String?
  hAddedBy             Int
  dtAddedUtc           DateTime
  hLastModifiedBy      Int
  dtLastModifiedUtc    DateTime
  // Define the relationship with FPMComplex
  complex              FPMComplex   @relation(fields: [hFPMComplex], references: [hMy])
  // Define the relationship with FPMDrawing
  drawings             FPMDrawing[]
}

// Define the model for FPMDrawingSpace
model FPMDrawingSpace {
  hMy                   Int        @id @default(autoincrement())
  sGuid                 String     @unique
  hFPMDrawing           Int
  hFPMFloor             Int
  sCode                 String
  iAreaCategory         Int
  dNetArea              Decimal
  hFPMBrandLogo         Int?
  hPropertylistingspace Int?
  // Define the relationship with FPMDrawing
  drawing               FPMDrawing @relation(fields: [hFPMDrawing], references: [hMy])
  // Define the relationship with FPMFloor
  floor                 FPMFloor   @relation(fields: [hFPMFloor], references: [hMy])
}

// Define the model for FPMFloor
model FPMFloor {
  hMy               Int               @id @default(autoincrement())
  sGuid             String            @unique
  hFPMBuilding      Int
  iLevel            Int
  sName             String
  hAddedBy          Int
  hAddedUtc         DateTime
  hLastModifiedBy   Int
  dtLastModifiedUtc DateTime
  // Define the relationship with FPMBuilding
  building          FPMBuilding       @relation(fields: [hFPMBuilding], references: [hMy])
  // Define the relationship with FPMDrawingSpace
  spaces            FPMDrawingSpace[]
  // Define the relationship with FPMDrawing through FPMFloorDrawingXref
  drawings          FPMDrawing[]      @relation(name: "FPMFloorDrawingXref")
}

// Define the model for FPMFloorDrawingXref
model FPMFloorDrawingXref {
  hFPMFloor   Int
  hFPMDrawing Int
  // Define the relationship

  // Define the pk for the model
  @@id([hFPMFloor, hFPMDrawing])
}
